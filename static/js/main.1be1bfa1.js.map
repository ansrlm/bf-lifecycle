{"version":3,"file":"static/js/main.1be1bfa1.js","mappings":"yBAUA,MAcE,SAAYA,GAAZ,IAaCC,EAAAA,KAEM,KAAAC,MAAQ,WACbC,OAAOC,iBAAiB,WAAYH,EAAKI,gBACzCF,OAAOC,iBAAiB,WAAYH,EAAKK,eAC3C,EAEQ,KAAAC,cAAgB,WACtB,OAAAJ,OAAOK,YAAYC,WAAWC,OAC5BP,OAAOK,YAAYC,WAAWE,mBAChCR,OAAOK,YACJI,iBAAiB,cACjBC,KAAI,SAACJ,GAAe,OAACA,EAA2CC,IAA5C,IACpBI,SAAS,eALZ,EAOK,KAAAC,kBAAoB,WACzBd,EAAKD,MAAMgB,YAAcf,EAAKD,MAAMgB,YACtC,EAEO,KAAAC,oBAAsB,WAC3B,IAAMC,EACHjB,EAAKM,iBACJN,EAAKD,MAAMmB,cACXlB,EAAKD,MAAMmB,iBACb,EAIF,OAFAlB,EAAKmB,aAAeF,EAEbA,CACT,EAEQ,KAAAG,QAAU,WAChB,QACEpB,EAAKD,MAAMsB,SACXrB,EAAKD,MAAMsB,QAAQC,gBAClBtB,EAAKmB,WAHR,EAMK,KAAAI,gBAAkB,WACvBvB,EAAKM,iBACHN,EAAKoB,WACLpB,EAAKD,MAAMyB,UACXxB,EAAKD,MAAMyB,UACf,EAEO,KAAAC,QAAU,WACfvB,OAAOwB,oBAAoB,WAAY1B,EAAKI,gBAC5CF,OAAOwB,oBAAoB,WAAY1B,EAAKK,gBAC5CL,EAAKmB,YAAa,CACpB,EA7DEQ,KAAK5B,MAAQA,EACb4B,KAAKvB,eAAiB,SAACwB,GACrBA,EAAEC,WAAa7B,EAAKD,MAAMyB,UAAYxB,EAAKD,MAAMyB,UACnD,EACAG,KAAKtB,eAAiB,SAACuB,GACrB5B,EAAKD,MAAMgB,YAAcf,EAAKD,MAAMgB,cACnCa,EAAEC,WACD7B,EAAKD,MAAMsB,SACXrB,EAAKD,MAAMsB,QAAQS,kCACnB5B,OAAO6B,SAAS,EAAG,EACvB,EACAJ,KAAKR,YAAa,C,EClChBa,EAAmBC,SAASC,eAAe,QAEjDF,EAAiBG,UAAY,UAE7B,IAAMC,EAAc,IAAIC,EAAqB,CAC3Cb,SAAU,WACRQ,EAAiBG,UAAY,2BAC/B,EACApB,WAAY,WACVuB,eAAeC,QAAQ,4BAA6B,eACtD,EACArB,aAAc,WACZ,IAAMD,EAAOqB,eAAeE,QAAQ,6BAEpC,OADAF,eAAeG,WAAW,6BACnBxB,CACT,EACAI,QAAS,CACPC,eAAe,EACfoB,oCAAoC,KAIxCN,EAAYnC,QAEZ,IAAMgB,EAAOmB,EAAYpB,sBAErBC,IAAMe,EAAiBG,UAAYlB,E","sources":["../../bf-lifecycle/src/BackForwardLifecycle.ts","index.js"],"sourcesContent":["interface Props {\n  callback?: () => void;\n  storeState?: () => void;\n  restoreState?: () => object | undefined | null | false;\n  options?: {\n    hasDependency?: boolean;\n    withClearScrollWillNotStoreCache?: boolean;\n  };\n}\n\nclass BackForwardLifecycle {\n  /**\n   * @param callback: callback function after restoring from the cases - bfcache or session storage\n   * @param storeState: hook to store data to session\n   * @param restoreState: hook to restore data from session\n   * @param options.hasDependency: additional checker for triggering callback - success to restore data from session or not\n   * @param options.withClearScrollWillNotStoreCache: function to clear scroll position before hide cycle for the case - will not store bfcache\n   */\n\n  private props: Props;\n  private handlePageShow: (e: PageTransitionEvent) => void;\n  private handlePageHide: (e: PageTransitionEvent) => void;\n  private _isSuccess: boolean;\n\n  constructor(props: Props) {\n    this.props = props;\n    this.handlePageShow = (e: PageTransitionEvent): void => {\n      e.persisted && this.props.callback && this.props.callback();\n    };\n    this.handlePageHide = (e: PageTransitionEvent): void => {\n      this.props.storeState && this.props.storeState();\n      !e.persisted &&\n        this.props.options &&\n        this.props.options.withClearScrollWillNotStoreCache &&\n        window.scrollTo(0, 0);\n    };\n    this._isSuccess = false;\n  }\n\n  public mount = (): void => {\n    window.addEventListener(\"pageshow\", this.handlePageShow);\n    window.addEventListener(\"pagehide\", this.handlePageHide);\n  };\n\n  private isBackForward = (): boolean =>\n    window.performance.navigation.type ===\n      window.performance.navigation.TYPE_BACK_FORWARD ||\n    window.performance\n      .getEntriesByType(\"navigation\")\n      .map((navigation) => (navigation as PerformanceNavigationTiming).type)\n      .includes(\"back_forward\");\n\n  public triggerStoreState = (): void => {\n    this.props.storeState && this.props.storeState();\n  };\n\n  public triggerRestoreState = (): object | string | false => {\n    const data =\n      (this.isBackForward() &&\n        this.props.restoreState &&\n        this.props.restoreState()) ||\n      false;\n\n    this._isSuccess = !!data;\n\n    return data;\n  };\n\n  private isValid = (): boolean =>\n    !(\n      this.props.options &&\n      this.props.options.hasDependency &&\n      !this._isSuccess\n    );\n\n  public triggerCallback = (): void => {\n    this.isBackForward() &&\n      this.isValid() &&\n      this.props.callback &&\n      this.props.callback();\n  };\n\n  public unmount = (): void => {\n    window.removeEventListener(\"pageshow\", this.handlePageShow);\n    window.removeEventListener(\"pagehide\", this.handlePageHide);\n    this._isSuccess = false;\n  };\n}\n\nexport default BackForwardLifecycle;\n","import BackForwardLifecycle from \"bf-lifecycle\";\n\nconst pageStateElement = document.getElementById(\"demo\");\n\npageStateElement.innerHTML = \"initial\";\n\nconst bfLifecycle = new BackForwardLifecycle({\n  callback: () => {\n    pageStateElement.innerHTML = \"back_forward_from_bfcache\";\n  },\n  storeState: () => {\n    sessionStorage.setItem(\"bf-lifecycle-example-data\", \"back_forward\");\n  },\n  restoreState: () => {\n    const data = sessionStorage.getItem(\"bf-lifecycle-example-data\");\n    sessionStorage.removeItem(\"bf-lifecycle-example-data\");\n    return data;\n  },\n  options: {\n    hasDependency: true,\n    withClearScrollWillNotStoreBfCache: true,\n  },\n});\n\nbfLifecycle.mount();\n\nconst data = bfLifecycle.triggerRestoreState();\n\nif (data) pageStateElement.innerHTML = data;\n"],"names":["props","_this","mount","window","addEventListener","handlePageShow","handlePageHide","isBackForward","performance","navigation","type","TYPE_BACK_FORWARD","getEntriesByType","map","includes","triggerStoreState","storeState","triggerRestoreState","data","restoreState","_isSuccess","isValid","options","hasDependency","triggerCallback","callback","unmount","removeEventListener","this","e","persisted","withClearScrollWillNotStoreCache","scrollTo","pageStateElement","document","getElementById","innerHTML","bfLifecycle","BackForwardLifecycle","sessionStorage","setItem","getItem","removeItem","withClearScrollWillNotStoreBfCache"],"sourceRoot":""}