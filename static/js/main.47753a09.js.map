{"version":3,"file":"static/js/main.47753a09.js","mappings":"+BAwBE,SAAYA,GAAZ,WAeO,KAAAC,MAAQ,WACbC,OAAOC,iBAAiB,WAAYC,EAAKC,gBACzCH,OAAOC,iBAAiB,WAAYC,EAAKE,e,EAGnC,KAAAC,iBAAmB,WACzB,OAAAL,OAAOM,YAAYC,WAAWC,OAC5BR,OAAOM,YAAYC,WAAWE,mBAChCT,OAAOM,YACJI,iBAAiB,cACjBC,KAAI,SAACJ,GAAe,OAACA,EAA2CC,IAAI,IACpEI,SAAS,e,EAEP,KAAAC,mBAAqB,WAC1BX,EAAKJ,MAAMgB,aAAeZ,EAAKJ,MAAMgB,a,EAGhC,KAAAC,qBAAuB,WAC5B,IAAMC,EACHd,EAAKG,oBACJH,EAAKJ,MAAMmB,eACXf,EAAKJ,MAAMmB,kBACb,EAIF,OAFAf,EAAKgB,YAAcF,EAEZA,C,EAGD,KAAAG,QAAU,WAChB,QACEjB,EAAKJ,MAAMsB,SACXlB,EAAKJ,MAAMsB,QAAQC,gBAClBnB,EAAKgB,U,EAGH,KAAAI,gBAAkB,WACvBpB,EAAKG,oBACHH,EAAKiB,WACLjB,EAAKJ,MAAMyB,UACXrB,EAAKJ,MAAMyB,U,EAGR,KAAAC,QAAU,WACfxB,OAAOyB,oBAAoB,WAAYvB,EAAKC,gBAC5CH,OAAOyB,oBAAoB,WAAYvB,EAAKE,gBAC5CF,EAAKgB,WAAY,C,EA5DjBQ,KAAK5B,MAAQA,EACb4B,KAAKvB,eAAiB,SAACwB,GACrBA,EAAEC,WAAa1B,EAAKJ,MAAMyB,UAAYrB,EAAKJ,MAAMyB,U,EAEnDG,KAAKtB,eAAiB,SAACuB,GACrBzB,EAAKJ,MAAMgB,aAAeZ,EAAKJ,MAAMgB,eACpCa,EAAEC,WACD1B,EAAKJ,MAAMsB,SACXlB,EAAKJ,MAAMsB,QAAQS,kCACnB7B,OAAO8B,SAAS,EAAG,E,EAEvBJ,KAAKR,WAAY,C,EClCfa,EAAmBC,SAASC,eAAe,QAEjDF,EAAiBG,UAAY,UAE7B,IAAMC,EAAc,IAAIC,EAAqB,CAC3Cb,SAAU,WACRQ,EAAiBG,UAAY,2BAC/B,EACAG,WAAY,WACVC,eAAeC,QAAQ,4BAA6B,eACtD,EACAC,aAAc,WACZ,IAAMxB,EAAOsB,eAAeG,QAAQ,6BAEpC,OADAH,eAAeI,WAAW,6BACnB1B,CACT,EACAI,QAAS,CACPC,eAAe,EACfsB,oCAAoC,KAIxCR,EAAYpC,QAEZ,IAAMiB,EAAOmB,EAAYS,sBAErB5B,IAAMe,EAAiBG,UAAYlB,E","sources":["../node_modules/bf-lifecycle/src/BackForwardLifecycle.ts","index.js"],"sourcesContent":["interface Props {\n  callback?: () => void;\n  storeStatus?: () => void;\n  restoreStatus?: () => object | undefined | null | false;\n  options?: {\n    hasDependency?: boolean;\n    withClearScrollWillNotStoreCache?: boolean;\n  };\n}\n\nclass BackForwardLifecycle {\n  /**\n   * @param callback: callback function after restoring from the cases - bfcache or session storage\n   * @param storeStatus: hook to store data to session\n   * @param restoreStatus: hook to restore data from session\n   * @param options.hasDependency: additional checker for triggering callback - success to restore data from session or not\n   * @param options.withClearScrollWillNotStoreCache: function to clear scroll position before hide cycle for the case - will not store bfcache\n   */\n\n  private props: Props;\n  private handlePageShow: (e: PageTransitionEvent) => void;\n  private handlePageHide: (e: PageTransitionEvent) => void;\n  private isSuccess: boolean;\n\n  constructor(props: Props) {\n    this.props = props;\n    this.handlePageShow = (e: PageTransitionEvent) => {\n      e.persisted && this.props.callback && this.props.callback();\n    };\n    this.handlePageHide = (e: PageTransitionEvent) => {\n      this.props.storeStatus && this.props.storeStatus();\n      !e.persisted &&\n        this.props.options &&\n        this.props.options.withClearScrollWillNotStoreCache &&\n        window.scrollTo(0, 0);\n    };\n    this.isSuccess = false;\n  }\n\n  public mount = (): void => {\n    window.addEventListener(\"pageshow\", this.handlePageShow);\n    window.addEventListener(\"pagehide\", this.handlePageHide);\n  };\n\n  private checkBackForward = (): boolean =>\n    window.performance.navigation.type ===\n      window.performance.navigation.TYPE_BACK_FORWARD ||\n    window.performance\n      .getEntriesByType(\"navigation\")\n      .map((navigation) => (navigation as PerformanceNavigationTiming).type)\n      .includes(\"back_forward\");\n\n  public triggerStoreStatus = (): void => {\n    this.props.storeStatus && this.props.storeStatus();\n  };\n\n  public triggerRestoreStatus = (): object | string | false => {\n    const data =\n      (this.checkBackForward() &&\n        this.props.restoreStatus &&\n        this.props.restoreStatus()) ||\n      false;\n\n    this.isSuccess = !!data;\n\n    return data;\n  };\n\n  private isValid = (): boolean =>\n    !(\n      this.props.options &&\n      this.props.options.hasDependency &&\n      !this.isSuccess\n    );\n\n  public triggerCallback = (): void => {\n    this.checkBackForward() &&\n      this.isValid() &&\n      this.props.callback &&\n      this.props.callback();\n  };\n\n  public unmount = (): void => {\n    window.removeEventListener(\"pageshow\", this.handlePageShow);\n    window.removeEventListener(\"pagehide\", this.handlePageHide);\n    this.isSuccess = false;\n  };\n}\n\nexport default BackForwardLifecycle;\n","import BackForwardLifecycle from \"bf-lifecycle\";\n\nconst pageStateElement = document.getElementById(\"demo\");\n\npageStateElement.innerHTML = \"initial\";\n\nconst bfLifecycle = new BackForwardLifecycle({\n  callback: () => {\n    pageStateElement.innerHTML = \"back_forward_from_bfcache\";\n  },\n  storeState: () => {\n    sessionStorage.setItem(\"bf-lifecycle-example-data\", \"back_forward\");\n  },\n  restoreState: () => {\n    const data = sessionStorage.getItem(\"bf-lifecycle-example-data\");\n    sessionStorage.removeItem(\"bf-lifecycle-example-data\");\n    return data;\n  },\n  options: {\n    hasDependency: true,\n    withClearScrollWillNotStoreBfCache: true,\n  },\n});\n\nbfLifecycle.mount();\n\nconst data = bfLifecycle.triggerRestoreState();\n\nif (data) pageStateElement.innerHTML = data;\n"],"names":["props","mount","window","addEventListener","_this","handlePageShow","handlePageHide","checkBackForward","performance","navigation","type","TYPE_BACK_FORWARD","getEntriesByType","map","includes","triggerStoreStatus","storeStatus","triggerRestoreStatus","data","restoreStatus","isSuccess","isValid","options","hasDependency","triggerCallback","callback","unmount","removeEventListener","this","e","persisted","withClearScrollWillNotStoreCache","scrollTo","pageStateElement","document","getElementById","innerHTML","bfLifecycle","BackForwardLifecycle","storeState","sessionStorage","setItem","restoreState","getItem","removeItem","withClearScrollWillNotStoreBfCache","triggerRestoreState"],"sourceRoot":""}